/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bluepyjama.ihstech.CueNet.SoundCuer;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author buckbanzai
 */
public class MainWindow extends javax.swing.JPanel {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(cueList.getModel());
        cueList.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.DESCENDING));
        sorter.setSortKeys(sortKeys);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cueList = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        removeButton = new javax.swing.JButton();
        statusIndicator = new javax.swing.JLabel();
        openButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        cueList.setAutoCreateRowSorter(true);
        cueList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cue", "Title", "File"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cueList);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bluepyjama/ihstech/CueNet/SoundCuer/icons/list-add.png"))); // NOI18N
        addButton.setText("Add Cue");
        addButton.setToolTipText("");

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bluepyjama/ihstech/CueNet/SoundCuer/icons/list-remove.png"))); // NOI18N
        removeButton.setText("Remove Cue");
        removeButton.setToolTipText("");

        statusIndicator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bluepyjama/ihstech/CueNet/SoundCuer/icons/gtk-no.png"))); // NOI18N

        openButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bluepyjama/ihstech/CueNet/SoundCuer/icons/document-open.png"))); // NOI18N
        openButton.setText("Open List");
        openButton.setToolTipText("");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bluepyjama/ihstech/CueNet/SoundCuer/icons/document-save.png"))); // NOI18N
        saveButton.setText("Save List");
        saveButton.setToolTipText("");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusIndicator)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(statusIndicator))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addButton)
                        .addComponent(removeButton)
                        .addComponent(openButton)
                        .addComponent(saveButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new ShowFileFilter());
        fc.setAcceptAllFileFilterUsed(false);

        //In response to a button click:
        int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            //This is where a real application would open the file.
            System.out.println(file.getName());
            try (InputStream in = Files.newInputStream(file.toPath()); BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
                String line = null;
                DefaultTableModel model = (DefaultTableModel) cueList.getModel();
                model.setNumRows(0);
                System.out.println("Cleared Table!");
                while ((line = reader.readLine()) != null) {
                    System.out.println(line);

                    int cue = Integer.parseInt(line.substring(0, line.indexOf('|')));
                    String title = line.substring(line.indexOf('|') + 1, line.indexOf('|', line.indexOf('|') + 1));
                    String path = line.substring(line.indexOf('|', line.indexOf('|') + 1) + 1);
                    model.addRow(new Object[]{cue, title, path});
                }
            } catch (Exception x) {
                System.err.println(x);
            }
        } else {
            System.out.println("Cancelled");
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new ShowFileFilter());
        fc.setAcceptAllFileFilterUsed(false);

        //In response to a button click:
        int returnVal = fc.showSaveDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try{
            File file = fc.getSelectedFile();
            //This is where a real application would open the file.
            System.out.println(file.getName());
            FileOutputStream fos = new FileOutputStream(file);
            OutputStreamWriter out = new OutputStreamWriter(fos); 
            List<String> lines = new ArrayList<>();
            for(int i = 0; i<cueList.getModel().getRowCount();i++){
                lines.add(Integer.toString((int)cueList.getValueAt(i, 0))+"|"+(String)cueList.getValueAt(i, 1)+"|"+(String)cueList.getValueAt(i,2));
            }
             Path path = Paths.get(file.getAbsolutePath());
    Files.write(path, lines,StandardCharsets.UTF_8);
            System.out.println(lines);
            }catch(Exception e){
                System.out.println(e);
            }
        } else {
            System.out.println("Cancelled");
        }
    }//GEN-LAST:event_saveButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTable cueList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton openButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel statusIndicator;
    // End of variables declaration//GEN-END:variables
}
